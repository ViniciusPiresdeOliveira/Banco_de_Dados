select a.nome as nome_artista, 
	   m.nome as nome_musica
from artista a, musica m --não tem problema declarar depois o apelido para a tabela
-- conecta através das duas chaves (PK - id - e a FK - id_artista)
where a.id = m.id_artista -- conexão de duas tabelas (duas peças do quebra cabeça)
and a.nome == 'Rihanna'

select a.id, 
	   a.nome as nome_artista,
	   m.id_artista,
	   m.nome as nome_musica
from artista a, musica m --não tem problema declarar depois o apelido para a tabela
-- conecta at


-- Nome do artista, nome da música e url da música 

select a.nome as nome_artista,
	   a.popularidade,
	   m.nome as nome_musica,
	   m.url 
from artista a, musica m --não tem problema declarar depois o apelido para a tabela
-- conecta através das duas chaves (PK - id - e a FK - id_artista)
where a.id = m.id_artista -- conexão de duas tabelas (duas peças do quebra cabeça)
and a.nome == 'Rihanna'


select a.nome as nome_artista,
	   a.popularidade,
	   a.seguidores,
	   m.nome as nome_musica,
	   m.url
from artista a, musica m --não tem problema declarar depois o apelido para a tabela
-- conecta através das duas chaves (PK - id - e a FK - id_artista)
where a.id = m.id_artista -- conexão de duas tabelas (duas peças do quebra cabeça)
and a.nome like 'A%'
and a.nome like '%s' -- não importa o que vem antes, quero que termine com a letra s
and a.popularidade > 80

select m.nome as musica,
	   a.nome as artista,
	   p.nome as pais,
	   pm.posicao
from musica m, artista a, pais p, pais_musica pm 
where a.id = m.id_artista -- 1 conexão entre as tabelas artista e musica
and m.id = pm.id_musica -- 2 conexao entre as tabelas musica e pais_musica 
and pm.id_pais = p.id -- 3 conexao entre pais_musica e pais
and p.nome == 'Brazil'
order by pm.posicao

select m.nome as musica,
	   a.nome as artista,
	   p.nome as pais,
	   pm.posicao
from musica m, artista a, pais p, pais_musica pm 
where a.id = m.id_artista -- 1 conexão entre as tabelas artista e musica
and m.id = pm.id_musica -- 2 conexao entre as tabelas musica e pais_musica 
and pm.id_pais = p.id -- 3 conexao entre pais_musica e pais
and a.nome like 'Justin T%'
order by pm.posicao

-- Quantidade de vezes que um artista apareceu no rank 

select a.nome, -- nome do artista
	count(*) -- quantas vezes o artista aparece
from pais p, pais_musica pm, artista a, musica m 
where p.id = pm.id_pais -- 1 conexao 
and pm.id_musica = m.id -- 2 conexao 
and m.id_artista = a.id -- 3 conexao
group by (a.id)
order by 2 desc

select a.nome as artista,
       a.popularidade,
       a.seguidores,
       m.nome as musica,
       p.nome as pais,
       pm.posicao,
       pm.streams,
       group_concat(g.nome) as generos -- concatenou os reg. de genero em uma única coluna
       -- string_agg(g.nome, ', ') as genero_list funcionaria no postgres
from artista a, pais p, musica m, 
     genero g, pais_musica pm, artista_genero ag 
where a.id = ag.id_artista --1 conexao 
and g.id = ag.id_genero -- 2 conexao
and a.id = m.id_artista -- 3 conexao 
and m.id = pm.id_musica -- 4 conexao 
and p.id = pm.id_pais -- 5 conexao
group by m.nome

-- Quantidade países que cada música toca
select m.nome,
	count(*) as qtd_paises
from pais_musica pm  
inner join musica m on m.id = pm.id_musica -- 1 conexao
group by pm.id_musica 
order by 2 desc

select m.nome, 
	 p.nome 
from musica m, pais p, pais_musica pm  
where p.id = pm.id_pais
and m.id = pm.id_musica 